#!/bin/bash


function help(){
	

	echo " script usage:"
	echo " xtf [FILTER] [COMMAND] [USER_NAME] [LOG]"
	
}

function list(){
		
	if [[ "$2" == *.gz ]]; then
		zgrep "$1" "$2"
	else
		grep "$1" "$2"
	fi
	
}





function lcurrency(){
	
	all_curr=()
	

	if [[ "$2" == *.gz ]]; then

		for line in "$(zgrep "$1" "$2")"; do
		
			curr=$(echo "$line" | cut -d';' -f3)
			all_curr+=("$curr")

		done
	else
	
		for line in "$(grep "$1" "$2")"; do
		
			curr=$(echo "$line" | cut -d';' -f3)
			all_curr+=("$curr")

		done
	fi

	echo "${all_curr[@]}" | sort -u

}

function profit(){
	
	if ! [[ -v XTF_PROFIT ]]; then
		XTF_PROFIT=20
	fi

	mapfile -t stats < <(status "$1" "$2")

	for p in "${stats[@]}"; do
		num=$(echo "$p" | cut -d' ' -f3)
		curr=$(echo "$p" | cut -d' ' -f1)
		
		
		p=$(echo "0.$XTF_PROFIT")

			
		if (( $(echo "$num > 0" | bc -l) )); then
			num=$(awk -v num="$num" -v p="$p" 'BEGIN { result = num + num * p; printf "%.4f", result }')
			echo "$curr : $num"
		else 
			echo "$curr : $num"	
		fi
	done
}


function status(){

	all_curr=()
	all_stats=()


	if [[ "$2" == *.gz ]]; then
		
		
		while IFS= read -r line; do

			curr=$(echo "$line" | cut -d';' -f3)
			stat=$(echo "$line" | cut -d';' -f3,4)
		
			all_curr+=("$curr")
			all_stats+=("$stat")

		done <<< "$(zgrep "$1" "$2")"
	

	else 

		while IFS= read -r line; do

			curr=$(echo "$line" | cut -d';' -f3)
			stat=$(echo "$line" | cut -d';' -f3,4)
		
			all_curr+=("$curr")
			all_stats+=("$stat")

		done <<< "$(grep "$1" "$2")"
	fi


	all_stats=($(for element in "${all_stats[@]}"; do echo "$element"; done | sort))
	all_curr=($(for element in "${all_curr[@]}"; do echo "$element"; done | sort))	

	results=()
	i=0
	j=0

	for c1 in "${all_curr[@]}"; do
		num1=$(echo "${all_stats[i]}" | cut -d';' -f2)
		
		j=0
		for c2 in "${all_curr[@]}"; do
			num2=$(echo "${all_stats[j]}" | cut -d';' -f2)
			

			if [ "$i" != "$j" ] && [ "$c1" == "$c2" ]; then
				num1=$(awk -v num1="$num1"  -v num2="$num2" 'BEGIN { sum = num1 + num2; printf "%.4f\n", sum }')
			fi
			
			((j++))
		done
		
		if [ "$i" == $(echo "${#all_stats[@]}-1" | bc) ]; then
			results+="$c1 : $num1"
		else
			results+="$c1 : "$num1""$'\n'
		fi		
			
		((i++))
	
	done

	echo "${results[@]}" | uniq


}


function after(){

	
	date=$(date -d "$1" +%s)
	while IFS= read -r line; do
			
		d=$(echo "$line" | awk -F';' '{ print $2 }')
		cmp_date=$(date -d "$d" +%s)
		

		if [[ "$cmp_date" -gt "$date" ]]; then
			echo "$line"
		fi				
	done < <(list "$2" "$3")
}

function before(){

	date=$(date -d "$1" +%s)
	while IFS= read -r line; do
				
		d=$(echo "$line" | awk -F';' '{ print $2 }')
		cmp_date=$(date -d "$d" +%s)
		

		if [[ "$cmp_date" -lt "$date" ]]; then
			echo "$line"
		fi				
	done < <(list "$2" "$3")

}
	

function currency(){

	while IFS= read -r line; do
				
		curr=$(echo "$line" | awk -F';' '{ print $3 }')

		if [[ "$curr" == "$1" ]]; then
			echo "$line"
		fi				
	done < <(list "$2" "$3")

}

if [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
	if [ $# == 1 ]; then 
		help
	else 
		echo "Unknown command"
	fi
fi


is_file=0
is_name=0
is_filter=0
is_cmd=0
for arg in "$@"; do
	
	if [ "$arg" == "list-currency" ] || [ "$arg" == "status" ] || [ "$arg" == "profit" ] || [ "$arg" == "list" ]; then
		cmd="$arg"
		is_cmd=1

	elif [[ "$arg" == *.gz ]] && [[ "$is_file" == 0 ]]; then	
		file="$arg"
		is_file=1
	elif [[ "$arg" == *.gz ]] && [[ "$is_file" == 1 ]]; then
		zcat "$arg" >> "$file"

	elif [[ "$arg" == *.log ]] && [[ "$is_file" == 0 ]]; then
		file="$arg"
		is_file=1	
	elif [[ "$arg" == *.log ]] && [[ "$is_file" == 1 ]]; then
		cat "$arg" >> "$file"

	elif [[ "$arg" =~ ^.{4,}$ ]]; then
		is_name=1
		name="$arg"
	
	elif [[ "$arg" =~ ^\-[a-z]{1}$ ]]; then
		is_filter=1

	elif [ "$arg" == "list" ] || [ "$arg" == "list-currency" ] || [ "$arg" == "status" ] || [ "$arg" == "profit" ]; then
		is_cmd=1
		cmd="$arg"
	fi
done



if [[ "$is_src" == 0 ]] || [[ "$is_name" == 0 ]]; then
	echo "ERROR: Missing one or more crucial arguments" >&2
	exit 1
fi


if [[ "$is_cmd" == 1 ]]; then

	if [[ "$is_filter" == 0 ]]; then

		if [ "$cmd" == "list-currency" ]; then
			lcurrency "$name" "$file"
		elif [ "$cmd"  == "status" ]; then
		      status "$name" logs.txt
	      	elif [ "$cmd" == "profit" ]; then
	  		profit "$name" "$file"
		elif [ "$cmd" == "list" ]; then
			list "$name" "$file"
		fi
	fi
else 
	list "$name" "$file"
fi	



